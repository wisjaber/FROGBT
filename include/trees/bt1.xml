<root BTCPP_format="4">
  <BehaviorTree ID="MainTree"> 
      <Sequence>
            <initialising_tree name="initialising_tree"/>
            <tag_detection_check service_name="filter_apriltag_detection" tag="21"/>
            <vacuum_check service_name="VacuumCheckService"/>
            
            <Decorator ID="RetryUntilSuccessful" num_attempts="4">
                <Action ID="PickAction" id="21" server_name="/pick_server" timeout="500"/>
            </Decorator>
            <Decorator ID="RetryUntilSuccessful" num_attempts="4">
                <Action ID="MoveBaseAction" goal="shelf" server_name="/move_base" timeout="500"/>
            </Decorator>
            <Decorator ID="RetryUntilSuccessful" num_attempts="4">
                <Action ID="PlaceAction" id="21" server_name="/place_server" timeout="500"/>
            </Decorator>
        </Sequence>
  </BehaviorTree>
  <!-- ////// -->
  <TreeNodesModel>
      <Action ID="MoveBaseAction">
        <input_port name="goal" type="std::string"/>
        <input_port name="server_name" type="std::string">name of the Action Server</input_port>
        <input_port name="timeout" type="unsigned int">timeout to connect (milliseconds)</input_port>
      </Action>
      <Action ID="PickAction">
        <input_port name="id" type="std::string"/>
        <input_port name="server_name" type="std::string">name of the Action Server</input_port>
        <input_port name="timeout" type="unsigned int">timeout to connect (milliseconds)</input_port>
    </Action>
    <Action ID="PlaceAction">
        <input_port name="id" type="std::string"/>
        <input_port name="server_name" type="std::string">name of the Action Server</input_port>
        <input_port name="timeout" type="unsigned int">timeout to connect (milliseconds)</input_port>
    </Action>
  </TreeNodesModel>
</root>